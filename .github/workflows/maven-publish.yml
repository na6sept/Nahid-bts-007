# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Java Maven Build and Publish Artifacts

on:
  push:
    branches: [main]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  publish-job:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mkdir dev && cp target/*.jar dev
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: dev
    - name: sleep for 10 seconds
      uses: GuillaumeFalourd/wait-sleep-action@v1
      with:
        time: '10' # for 10 seconds
    - name: Deploy the package to the remote server
      uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      with:
        server: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
        local_path: /home/runner/work/Nahid-bts-007/Nahid-bts-007/dev/nahid1-0.0.2-SNAPSHOT.jar
        remote_path: /home/ec2-user/ # My remote directory
        sftp_only: true
    - name: Run a script on remote server (start the application)
      if: always()
      uses: fifsky/ssh-action@master
      with:
        command: |
          cd home/ec2-user/ && java -jar nahid1-0.0.2-SNAPSHOT.jar &
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        ssh_privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
        args: "-tt"
        # The & in the command runs the process on background
